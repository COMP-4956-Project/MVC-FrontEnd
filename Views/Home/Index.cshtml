<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Code Craft</title>
  <style>
    #checkmark {
      top: 50%;
      transform: translate(910%, -70%);
      width: 100px;
      position: relative;
    }

    .wrong-answer-message {
      top: 50%;
      transform: translate(275%, -70%);
      width: 120px;
      font-size: 32px !important;
      white-space: nowrap;
      overflow: visible;
      width: auto;
      text-overflow: clip;
    }
  </style>
</head>

<body>

  <div id="mainContainer">
    <nav class="collapse d-lg-block sidebar left-sidebar-menu consistent-header-parent">
      <h5 class=" consistent-header full-width">Tasks</h5>
      <button class="tasks-button padding-10" onclick="openTasksModal()">Select a task</button>
      <br>
      <h5 class="consistent-header full-width">
        Code Blocks
      </h5>

      <div class="card">
        <div class="card-header" id="headingOne" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseOne" title="Variables are used to store information.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Variables
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          <a class="btn btn-primary" data-bs-toggle="collapse" href="#collapse"
           aria-expanded="false" aria-controls="collapse" id="variableaddition">
            Add Variable +
          </a>
          </h5>  
        </div>
        <div class="collapse" id="collapse">
          <div id="errorcontainer"></div>
          <div class="card card-body" id="createvariable">
            <input type="text" placeholder="Input name of Variable" name="name" id="textInput"></input>
            <select id="selectType" name="type" aria-placeholder="Type">
              <option></option>
            </select>
            <input type="text" id="valueInput" placeholder="Input value of Variable"></input>
          <a class="btn btn-primary" id="createbutton">
            Create Variable
          </a>
          </div>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-bs-parent="#accordion">
          <div class="card-body" id="variableContainer" ondrop="drop(event)" ondragover="allowDrop(event)">
          </div>
        </div>
      </div>

      <div class="card">
        <div class="card-header" id="headingTwo" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseTwo" title="Logic contains logical operators.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Logic
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-bs-parent="#accordion">
          <div class="card-body" id="logicContainer">
          </div>
        </div>
      </div>

      <div class="card">
        <div class="card-header" id="headingThree" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseThree" title="Math contains basic mathematical operators.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Math
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-bs-parent="#accordion">
          <div class="card-body" id="expressionContainer"></div>
        </div>
      </div>


      <div class="card">
        <div class="card-header" id="headingFour" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseFour" title="Functions contains pre-defined functions."> 
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Functions
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseFour" class="collapse" aria-labelledby="headingFour" data-bs-parent="#accordion">
          <div class="card-body" id="functionContainer">
          </div>
        </div>
      </div>

      <div class="card">
        <div class="card-header" id="headingFive" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseFive" title="Scope contains if conditions and loops.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Scope
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseFive" class="collapse" aria-labelledby="headingFive" data-bs-parent="#accordion">
          <div class="card-body" id="scopeContainer">
          </div>
        </div>
      </div>

      <div class="card">
        <div class="card-header" id="headingSix" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseSix" title="Equality contains comparison blocks.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Equality
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseSix" class="collapse" aria-labelledby="headingSix" data-bs-parent="#accordion">
          <div class="card-body" id="equalityContainer">
          </div>
        </div>
      </div>

      <div class="card">
        <div class="card-header" id="headingSeven" class="btn btn-link collapsed"
         data-bs-toggle="collapse" data-bs-target="#collapseSeven" title="Assignment contains ways to assign values.">
          <h5 class="mb-0">
            <button class="btn btn-link collapsed">
              Assignment
            </button>
            <button id="downarrow" class="btn btn-link collapsed">
              ▼
            </button>
          </h5>
        </div>
        <div id="collapseSeven" class="collapse" aria-labelledby="headingSeven" data-bs-parent="#accordion">
          <div class="card-body" id="assignmentContainer">
          </div>
        </div>
      </div>
    </nav>

    <div class="consistent-header-parent">
      <div class="task-description">
        <h5 class="consistent-header">
          Task Description
        </h5>
        <div class="description-of-selected-task">Currently no task selected</div>
      </div>
      <div class="content-wrapper">
        <h5 class="consistent-header">
          Code Editor
        </h5>

        <div class="tab-headers">
          <div class="tab active" data-tab-id="1">
            <span class="tab-title">Tab 1</span>
            <button class="close-tab">x</button>
          </div>
          <!-- Dynamically added tabs will appear here -->
          <button id="addTab">+</button>

          <button class="run-button" onclick="checkAnswer()">Run</button>


          <!-- ======================================== -->
          <!-- ======= Run / Stop Code Section ======== -->
          <!-- ======================================== -->
          @* Run Button *@
          @* <li class="nav-item run">
          <div class="run">
          <button id="run-button"></button>
          <span><b>Run</b></span>
          </div>
          </li> *@

          @* Stop Button *@
          @* <li class="nav-item stop">
          <div class="stop">
          <button id="stop-button"></button>
          <span><b>Stop</b></span>
          </div>
          </li> *@

        </div>

        <!-- Tab content -->
        <div class="tab-contents">
          <br><br>
          <div class="tab-content active testContainer2 line-container" id="test2" data-tab-id="1">
            @* Content for Tab 1 *@
            <div class="checkmark-image"></div>
            <div class="wrong-answer-message"></div>
          </div>
          <!-- Dynamically added tab contents will appear here -->

        </div>

        <!-- ======================================== -->
        <!-- =========== Garbaje Section ============ -->
        <!-- ======================================== -->
        <div class="consistent-header-parent console-container">
          <h5 class="consistent-header">
            Trash
          </h5>
          <div class="trash-container">          
            <img src="images/trash.png" alt="trash" class="trash-image" id="trash" ondrop="deleteDrop(event)" ondragover="allowDrop(event)">
            <div id="trash-container" class="trash-container"></div>
          </div>

        </div>


        <!-- ======================================== -->
        <!-- =========== Console Section ============ -->
        <!-- ======================================== -->
        <div class="consistent-header-parent console-container">
          <h5 class="consistent-header">
            Console Output
          </h5>
          <div class="console-content">
            <textarea id="console-textarea" oninput="updateConsoleOutput(this.value)"></textarea>
            <div class="console-error-line"></div>
          </div>
        </div>

      </div>
    </div>

    <!-- ======================================== -->
    <!-- ========Tutorial Video Section ========= -->
    <!-- ======================================== -->

    @* <div class="container tutorial-sidebar">

    <!-- ======================================== -->
    <!-- ============ Tasks Section ============= -->
    <!-- ======================================== -->

    <div class="tasks-container">
    <partial name="TasksModal" />
    </div>

    <partial name="TutorialSidebar" />

    </div> *@

    <div id="tasksContainer">
      <partial name="TasksModal" />
    </div>
  </div>
  <script>
    let answerIsCorrect = false;
    let consoleOutput = "";
    let answer = "hello world"; // for question 1
    const checkmarkImage = document.getElementById('checkmark');
    const checkmarkContainer = document.querySelector('.checkmark-image');
    const incorrectAnswerMessageContainer = document.querySelector('.wrong-answer-message');

    function updateConsoleOutput(value)
    {
      consoleOutput = value;
      console.log("consoleOutput: ", consoleOutput);

      // Update the height of the textarea based on the content
      const textarea = document.getElementById('console-textarea');
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
    }

    function checkAnswer()
    {
      console.log("run button clicked");
      console.log("consoleOutput: ", consoleOutput);
      console.log("answer: ", answer);

      if (consoleOutput.trim() === answer)
      {
        answerIsCorrect = true;
      } else
      {
        answerIsCorrect = false;
      }

      console.log("answerIsCorrect: ", answerIsCorrect);

      if (answerIsCorrect)
      {
        incorrectAnswerMessageContainer.innerHTML = '';
        checkmarkContainer.innerHTML = '<img src="/images/checkMark.png" alt="check mark image" id="checkmark">';
        console.log("IF checkmarkContainer: ", checkmarkContainer);
      } else
      {
        // Clear previous content in checkmarkContainer
        checkmarkContainer.innerHTML = '';

        incorrectAnswerMessageContainer.innerHTML = 'Oops! Let us try again :) ';
      }
    }


    window.onload = function ()
    {
      function openTasksModal()
      {
        $('#tasksModal').modal('show');
      }

      function closeModal()
      {
        document.querySelector('.modal-overlay').style.display = 'none';
        document.getElementById('tasksModal').style.display = 'none';
      }

      document.querySelector('.modal-overlay').addEventListener('click', function ()
      {
        closeModal();
      });

      tasksContainer.Visible = false;

      openTasksModal_ServerClick = function ()
      {
        tasksContainer.Visible = true;
      };
    };
  </script>

  <dialog id="confirmDelete">
    <form method="dialog">
      <p>Are you sure you want to delete this?</p>
      <div class="dialogButtonContainer">
        <button value="Yes" formmethod="dialog" id="deleteButton">Delete</button>
        <button value="No" formmethod="dialog">Cancel</button>
      </div>
    </form>
  </dialog>

  <dialog id="okDialog">
    <form method="dialog">
      <p id=okDialogMessage></p>
      <div class="dialogButtonContainer">
        <button value="Ok" formmethod="dialog">Ok</button>
      </div>
    </form>
  </dialog>


  <script type="module" defer src="js/testing.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script type="module" src="~/js/tabs.js"></script>
  <script type="module" src="js/dropdown.js"></script>
</body>

</html>
